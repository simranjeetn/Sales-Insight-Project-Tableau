<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0313.2002                               -->
<workbook original-version='18.1' source-build='2025.1.0 (20251.25.0313.2002)' source-platform='win' version='18.1' xml:base='https://prod-apnortheast-a.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelRelationshipPerfOptions />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='SalesInsightProjectforAtliQ' path='/t/talkswithsimranjeet-b20383df25/workbooks' revision='1.0' site='talkswithsimranjeet-b20383df25' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='transactions+ (sales)' inline='true' name='federated.0dglj7g00ckpfz1g8fu6g07ver8w' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1hzb0ei0f33vix10va3wk02yo531'>
            <connection class='mysql' dbname='sales' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' workgroup-auth-mode='prompt' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='mysql.1hzb0ei0f33vix10va3wk02yo531' name='transactions' table='[transactions]' type='table' />
          <relation connection='mysql.1hzb0ei0f33vix10va3wk02yo531' name='customers' table='[customers]' type='table' />
          <relation connection='mysql.1hzb0ei0f33vix10va3wk02yo531' name='date' table='[date]' type='table' />
          <relation connection='mysql.1hzb0ei0f33vix10va3wk02yo531' name='markets' table='[markets]' type='table' />
          <relation connection='mysql.1hzb0ei0f33vix10va3wk02yo531' name='products' table='[products]' type='table' />
        </relation>
        <cols>
          <map key='[cost_price]' value='[transactions].[cost_price]' />
          <map key='[currency]' value='[transactions].[currency]' />
          <map key='[custmer_name]' value='[customers].[custmer_name]' />
          <map key='[customer_code (customers)]' value='[customers].[customer_code]' />
          <map key='[customer_code]' value='[transactions].[customer_code]' />
          <map key='[customer_type]' value='[customers].[customer_type]' />
          <map key='[cy_date]' value='[date].[cy_date]' />
          <map key='[date]' value='[date].[date]' />
          <map key='[date_yy_mmm]' value='[date].[date_yy_mmm]' />
          <map key='[market_code]' value='[transactions].[market_code]' />
          <map key='[markets_code]' value='[markets].[markets_code]' />
          <map key='[markets_name]' value='[markets].[markets_name]' />
          <map key='[month_name]' value='[date].[month_name]' />
          <map key='[order_date]' value='[transactions].[order_date]' />
          <map key='[product_code (products)]' value='[products].[product_code]' />
          <map key='[product_code]' value='[transactions].[product_code]' />
          <map key='[product_type]' value='[products].[product_type]' />
          <map key='[profit_margin]' value='[transactions].[profit_margin]' />
          <map key='[profit_margin_percentage]' value='[transactions].[profit_margin_percentage]' />
          <map key='[sales_amount]' value='[transactions].[sales_amount]' />
          <map key='[sales_qty]' value='[transactions].[sales_qty]' />
          <map key='[year]' value='[date].[year]' />
          <map key='[zone]' value='[markets].[zone]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_86894A98C87443F8BE26CF98522FAC14]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_86894A98C87443F8BE26CF98522FAC14]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>market_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[market_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>market_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_86894A98C87443F8BE26CF98522FAC14]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[order_date]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>order_date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <object-id>[transactions_86894A98C87443F8BE26CF98522FAC14]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_qty</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sales_qty]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_qty</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[transactions_86894A98C87443F8BE26CF98522FAC14]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sales_amount]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_amount</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[transactions_86894A98C87443F8BE26CF98522FAC14]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>currency</remote-name>
            <remote-type>130</remote-type>
            <local-name>[currency]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>currency</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_86894A98C87443F8BE26CF98522FAC14]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>profit_margin_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[profit_margin_percentage]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>profit_margin_percentage</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[transactions_86894A98C87443F8BE26CF98522FAC14]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>profit_margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[profit_margin]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>profit_margin</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[transactions_86894A98C87443F8BE26CF98522FAC14]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost_price]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>cost_price</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[transactions_86894A98C87443F8BE26CF98522FAC14]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code (customers)]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[customers_2B8E012A64DD42BF9D04D10273DB19C2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>custmer_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[custmer_name]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>custmer_name</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[customers_2B8E012A64DD42BF9D04D10273DB19C2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_type]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_type</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[customers_2B8E012A64DD42BF9D04D10273DB19C2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>16</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <object-id>[date_0B8494D2FA134EC1B70DF7AE966492BC]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cy_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[cy_date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>cy_date</remote-alias>
            <ordinal>17</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <object-id>[date_0B8494D2FA134EC1B70DF7AE966492BC]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[date_0B8494D2FA134EC1B70DF7AE966492BC]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month_name]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>month_name</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[date_0B8494D2FA134EC1B70DF7AE966492BC]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_yy_mmm</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date_yy_mmm]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date_yy_mmm</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[date_0B8494D2FA134EC1B70DF7AE966492BC]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_code]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_code</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[markets_8A34B313729C4754886171ED54E70743]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_name]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_name</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[markets_8A34B313729C4754886171ED54E70743]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[zone]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>zone</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[markets_8A34B313729C4754886171ED54E70743]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code (products)]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[products_32474D8A5ED34C1EB4C4AEC8379CBA82]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_type]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_type</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[products_32474D8A5ED34C1EB4C4AEC8379CBA82]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:profit_margin:qk]&quot;' value='profit' />
        </aliases>
      </column>
      <column caption='Profit Margin %' datatype='real' name='[Calculation_617837636576002048]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([profit_margin])/SUM([Calculation_980940356462510080])' />
      </column>
      <column caption='Normalized Amount' datatype='real' name='[Calculation_980940356462510080]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*86 ELSE [sales_amount] END' />
      </column>
      <column caption='Blank' datatype='string' name='[Calculation_980940356503928835]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot; &quot;' />
      </column>
      <column caption='customers' datatype='table' name='[__tableau_internal_object_id__].[customers_2B8E012A64DD42BF9D04D10273DB19C2]' role='measure' type='quantitative' />
      <column caption='date' datatype='table' name='[__tableau_internal_object_id__].[date_0B8494D2FA134EC1B70DF7AE966492BC]' role='measure' type='quantitative' />
      <column caption='markets' datatype='table' name='[__tableau_internal_object_id__].[markets_8A34B313729C4754886171ED54E70743]' role='measure' type='quantitative' />
      <column caption='products' datatype='table' name='[__tableau_internal_object_id__].[products_32474D8A5ED34C1EB4C4AEC8379CBA82]' role='measure' type='quantitative' />
      <column caption='transactions' datatype='table' name='[__tableau_internal_object_id__].[transactions_86894A98C87443F8BE26CF98522FAC14]' role='measure' type='quantitative' />
      <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
      <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
      <column caption='Customer Code (Customers)' datatype='string' name='[customer_code (customers)]' role='dimension' type='nominal' />
      <column caption='Customer Code' datatype='string' name='[customer_code]' role='dimension' type='nominal' />
      <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
      <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Date Yy Mmm' datatype='string' name='[date_yy_mmm]' role='dimension' type='nominal' />
      <column caption='Market Code' datatype='string' name='[market_code]' role='dimension' type='nominal' />
      <column caption='Markets Code' datatype='string' name='[markets_code]' role='dimension' type='nominal' />
      <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
      <column caption='Month Name' datatype='string' name='[month_name]' role='dimension' type='nominal' />
      <column caption='Order Date' datatype='date' name='[order_date]' role='dimension' type='ordinal' />
      <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
      <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
      <column caption='Product Type' datatype='string' name='[product_type]' role='dimension' type='nominal' />
      <column datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
      <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
      <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column caption='Zone' datatype='string' name='[zone]' role='dimension' type='nominal' />
      <column-instance column='[cy_date]' derivation='Day' name='[dy:cy_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[customer_type]' derivation='None' name='[none:customer_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_980940356462510080]' derivation='Sum' name='[pcto:sum:Calculation_980940356462510080:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[cy_date]' derivation='Quarter' name='[qr:cy_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_980940356462510080]' derivation='Sum' name='[sum:Calculation_980940356462510080:qk]' pivot='key' type='quantitative' />
      <column-instance column='[profit_margin]' derivation='Sum' name='[sum:profit_margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_617837636576002048]' derivation='User' name='[usr:Calculation_617837636576002048:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Blank,MONTH(Cy Date))' hidden='true' name='[Action (Blank,MONTH(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_980940356503928835]' />
          <groupfilter function='level-members' level='[mn:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Blank,YEAR(Cy Date))' hidden='true' name='[Action (Blank,YEAR(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_980940356503928835]' />
          <groupfilter function='level-members' level='[yr:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Custmer Name)' hidden='true' name='[Action (Custmer Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[custmer_name]' />
        </groupfilter>
      </group>
      <group caption='Action (Markets Name)' hidden='true' name='[Action (Markets Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[markets_name]' />
        </groupfilter>
      </group>
      <group caption='Action (Product Code (Products))' hidden='true' name='[Action (Product Code (Products))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[product_code (products)]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Cy Date))' hidden='true' name='[Action (YEAR(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Cy Date),MONTH(Cy Date))' hidden='true' name='[Action (YEAR(Cy Date),MONTH(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:cy_date:ok]' />
          <groupfilter function='level-members' level='[mn:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Cy Date),QUARTER(Cy Date))' hidden='true' name='[Action (YEAR(Cy Date),QUARTER(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:cy_date:ok]' />
          <groupfilter function='level-members' level='[qr:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Cy Date),QUARTER(Cy Date),MONTH(Cy Date))' hidden='true' name='[Action (YEAR(Cy Date),QUARTER(Cy Date),MONTH(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:cy_date:ok]' />
          <groupfilter function='level-members' level='[qr:cy_date:ok]' />
          <groupfilter function='level-members' level='[mn:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Cy Date),QUARTER(Cy Date),MONTH(Cy Date),DAY(Cy Date))' hidden='true' name='[Action (YEAR(Cy Date),QUARTER(Cy Date),MONTH(Cy Date),DAY(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:cy_date:ok]' />
          <groupfilter function='level-members' level='[qr:cy_date:ok]' />
          <groupfilter function='level-members' level='[mn:cy_date:ok]' />
          <groupfilter function='level-members' level='[dy:cy_date:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:customer_type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Brick &amp; Mortar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E-Commerce&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[usr:Calculation_617837636576002048:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[pcto:sum:Calculation_980940356462510080:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='product_code' />
        <field-sort-custom-order field='customer_code' />
        <field-sort-custom-order field='market_code' />
        <field-sort-custom-order field='order_date' />
        <field-sort-custom-order field='sales_qty' />
        <field-sort-custom-order field='sales_amount' />
        <field-sort-custom-order field='Calculation_980940356462510080' />
        <field-sort-custom-order field='currency' />
      </field-sort-info>
      <filter class='categorical' column='[markets_code]' filter-group='2'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark001&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark002&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark003&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark004&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark005&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark006&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark007&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark008&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark009&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark010&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark011&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark012&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark013&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark014&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark015&quot;' />
        </groupfilter>
      </filter>
      <filter class='quantitative' column='[sales_amount]' filter-group='2' included-values='in-range'>
        <min>1.0</min>
        <max>1510944.0</max>
      </filter>
      <object-graph>
        <objects>
          <object caption='customers' id='customers_2B8E012A64DD42BF9D04D10273DB19C2'>
            <properties context=''>
              <relation connection='mysql.1hzb0ei0f33vix10va3wk02yo531' name='customers' table='[customers]' type='table' />
            </properties>
          </object>
          <object caption='date' id='date_0B8494D2FA134EC1B70DF7AE966492BC'>
            <properties context=''>
              <relation connection='mysql.1hzb0ei0f33vix10va3wk02yo531' name='date' table='[date]' type='table' />
            </properties>
          </object>
          <object caption='markets' id='markets_8A34B313729C4754886171ED54E70743'>
            <properties context=''>
              <relation connection='mysql.1hzb0ei0f33vix10va3wk02yo531' name='markets' table='[markets]' type='table' />
            </properties>
          </object>
          <object caption='products' id='products_32474D8A5ED34C1EB4C4AEC8379CBA82'>
            <properties context=''>
              <relation connection='mysql.1hzb0ei0f33vix10va3wk02yo531' name='products' table='[products]' type='table' />
            </properties>
          </object>
          <object caption='transactions' id='transactions_86894A98C87443F8BE26CF98522FAC14'>
            <properties context=''>
              <relation connection='mysql.1hzb0ei0f33vix10va3wk02yo531' name='transactions' table='[transactions]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[customer_code]' />
              <expression op='[customer_code (customers)]' />
            </expression>
            <first-end-point object-id='transactions_86894A98C87443F8BE26CF98522FAC14' />
            <second-end-point is-db-set-unique-key='true' object-id='customers_2B8E012A64DD42BF9D04D10273DB19C2' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[order_date]' />
              <expression op='[date]' />
            </expression>
            <first-end-point object-id='transactions_86894A98C87443F8BE26CF98522FAC14' />
            <second-end-point is-db-set-unique-key='true' object-id='date_0B8494D2FA134EC1B70DF7AE966492BC' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[market_code]' />
              <expression op='[markets_code]' />
            </expression>
            <first-end-point object-id='transactions_86894A98C87443F8BE26CF98522FAC14' />
            <second-end-point is-db-set-unique-key='true' object-id='markets_8A34B313729C4754886171ED54E70743' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[product_code]' />
              <expression op='[product_code (products)]' />
            </expression>
            <first-end-point object-id='transactions_86894A98C87443F8BE26CF98522FAC14' />
            <second-end-point is-db-set-unique-key='true' object-id='products_32474D8A5ED34C1EB4C4AEC8379CBA82' unique-key='true' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 10 (generated)' name='[Action10_FE1A0D04DF204CFCABF419030C2D864F]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard-Profit Analysis' type='sheet' worksheet='Profit Trend' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard-Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 11 (generated)' name='[Action11_2E1544E540734E89A887472D601D8F85]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard-Profit Analysis' type='sheet' worksheet='Profit' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard-Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 12 (generated)' name='[Action12_85D2167899D646D2967F7958B3C854C7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard-Profit Analysis' type='sheet' worksheet='Revenue' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard-Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 14 (generated)' name='[Action14_AB08BA008E564D87AE985F85A1C03C9A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard-Profit Analysis' type='sheet' worksheet='Profit By Markets' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard-Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 15 (generated)' name='[Action15_A452EE25693949FDBE52D405D38354E1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard-Profit Analysis' type='sheet' worksheet='Month' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard-Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 16 (generated)' name='[Action16_B9763DE664A649E3958604A2E486E608]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard-Profit Analysis' type='sheet' worksheet='Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard-Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action1_61CABB2881EE4C3499612F8992B57E80]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard-Revenue Analysis' type='sheet' worksheet='Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard-Revenue Analysis' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_A84F50B55FCF479F80954F69077E73C6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard-Revenue Analysis' type='sheet' worksheet='Month' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard-Revenue Analysis' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_247F114BB52444CC8050B27B1CD951AA]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard-Revenue Analysis' type='sheet' worksheet='Revenue' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard-Revenue Analysis' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_B62CB07998324C0C852210BE67E71957]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard-Revenue Analysis' type='sheet' worksheet='Quantity' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard-Revenue Analysis' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_A11E5B09D96F41038ED0F46568510258]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard-Revenue Analysis' type='sheet' worksheet='Revenue by Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard-Revenue Analysis' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_0399F30172B3477D9C0692C44C2EB73A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard-Revenue Analysis' type='sheet' worksheet='Top 5 Products' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard-Revenue Analysis' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7_F2F92F4785DB48C79FADB203CFB9AF29]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard-Revenue Analysis' type='sheet' worksheet='Top 5 Customers' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard-Revenue Analysis' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action8_EF5304BBE62842D0A92C3D54FC2FC5EB]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard-Revenue Analysis' type='sheet' worksheet='Sales Quantity by Markets' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard-Revenue Analysis' />
      </command>
    </action>
    <action caption='Filter 9 (generated)' name='[Action9_8187AC1206C6487E9A5DC05A60B12B00]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard-Revenue Analysis' type='sheet' worksheet='Revenue by Markets' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard-Revenue Analysis' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Customer Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0dglj7g00ckpfz1g8fu6g07ver8w' />
          </datasources>
          <datasource-dependencies datasource='federated.0dglj7g00ckpfz1g8fu6g07ver8w'>
            <column caption='Profit Margin %' datatype='real' name='[Calculation_617837636576002048]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([profit_margin])/SUM([Calculation_980940356462510080])' />
            </column>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_980940356462510080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*86 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_980940356503928835]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[custmer_name]' derivation='None' name='[none:custmer_name:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_980940356462510080]' derivation='Sum' name='[sum:Calculation_980940356462510080:qk]' pivot='key' type='quantitative' />
            <column-instance column='[profit_margin]' derivation='Sum' name='[sum:profit_margin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_617837636576002048]' derivation='User' name='[usr:Calculation_617837636576002048:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[usr:Calculation_617837636576002048:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:profit_margin:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]&quot;</bucket>
              <bucket>&quot;[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:profit_margin:qk]&quot;</bucket>
              <bucket>&quot;[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[usr:Calculation_617837636576002048:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action16_B9763DE664A649E3958604A2E486E608]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_980940356503928835]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action14_AB08BA008E564D87AE985F85A1C03C9A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date))]'>
            <groupfilter function='level-members' level='[yr:cy_date:ok]' user:ui-action-filter='[Action10_FE1A0D04DF204CFCABF419030C2D864F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[:Measure Names]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Markets Name)]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[usr:Calculation_617837636576002048:qk]' value='p0.00%' />
            <format attr='width' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[:Measure Names]' value='116' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:custmer_name:nk]' value='140' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:custmer_name:nk]</rows>
        <cols>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{71656BB4-D500-43B3-A49D-F475C1B7B73E}' />
    </worksheet>
    <worksheet name='Month'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <repository-location id='Month' path='/t/talkswithsimranjeet-b20383df25/workbooks/SalesInsightProjectforAtliQ' revision='' site='talkswithsimranjeet-b20383df25' />
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0dglj7g00ckpfz1g8fu6g07ver8w' />
          </datasources>
          <datasource-dependencies datasource='federated.0dglj7g00ckpfz1g8fu6g07ver8w'>
            <column caption='Blank' datatype='string' name='[Calculation_980940356503928835]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Day' name='[dy:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_980940356503928835]' derivation='None' name='[none:Calculation_980940356503928835:nk]' pivot='key' type='nominal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Quarter' name='[qr:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_61CABB2881EE4C3499612F8992B57E80]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_980940356503928835]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action9_8187AC1206C6487E9A5DC05A60B12B00]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Product Code (Products))]'>
            <groupfilter function='level-members' level='[product_code (products)]' user:ui-action-filter='[Action6_0399F30172B3477D9C0692C44C2EB73A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date))]'>
            <groupfilter function='level-members' level='[yr:cy_date:ok]' user:ui-action-filter='[Action10_FE1A0D04DF204CFCABF419030C2D864F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_A11E5B09D96F41038ED0F46568510258]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_FE1A0D04DF204CFCABF419030C2D864F]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[qr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date),MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_FE1A0D04DF204CFCABF419030C2D864F]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[qr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date),MONTH(Cy Date),DAY(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_FE1A0D04DF204CFCABF419030C2D864F]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[qr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
              <groupfilter function='level-members' level='[dy:cy_date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Markets Name)]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Product Code (Products))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),MONTH(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date),MONTH(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date),MONTH(Cy Date),DAY(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='5' />
            <format attr='width' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[mn:cy_date:ok]' value='70' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[mn:cy_date:ok]' value='21' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[yr:cy_date:ok]' value='#9d7660' />
            <format attr='font-size' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[yr:cy_date:ok]' value='12' />
            <format attr='font-weight' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[yr:cy_date:ok]' value='bold' />
            <format attr='color' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[mn:cy_date:ok]' value='#9d7660' />
            <format attr='font-size' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[mn:cy_date:ok]' value='12' />
            <format attr='font-weight' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[mn:cy_date:ok]' value='bold' />
            <format attr='text-format' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[mn:cy_date:ok]' value='iLLL' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:Calculation_980940356503928835:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[mn:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{EDCF63D7-B989-4EA7-A608-6DA9C720E507}' />
    </worksheet>
    <worksheet name='Pie Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0dglj7g00ckpfz1g8fu6g07ver8w' />
          </datasources>
          <datasource-dependencies datasource='federated.0dglj7g00ckpfz1g8fu6g07ver8w'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_980940356462510080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*86 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_980940356503928835]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[customer_type]' derivation='None' name='[none:customer_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_980940356462510080]' derivation='Sum' name='[pcto:sum:Calculation_980940356462510080:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_980940356462510080]' derivation='Sum' name='[sum:Calculation_980940356462510080:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action16_B9763DE664A649E3958604A2E486E608]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_980940356503928835]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action14_AB08BA008E564D87AE985F85A1C03C9A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date))]'>
            <groupfilter function='level-members' level='[yr:cy_date:ok]' user:ui-action-filter='[Action10_FE1A0D04DF204CFCABF419030C2D864F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Markets Name)]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:customer_type:nk]' />
              <wedge-size column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]' />
              <size column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]' />
              <text column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:customer_type:nk]' />
              <text column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[pcto:sum:Calculation_980940356462510080:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='12'><![CDATA[<[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:customer_type:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='12'><![CDATA[<[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[pcto:sum:Calculation_980940356462510080:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4E4C97E5-D8CC-4ECF-B1ED-C82558F00A22}' />
    </worksheet>
    <worksheet name='Profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0dglj7g00ckpfz1g8fu6g07ver8w' />
          </datasources>
          <datasource-dependencies datasource='federated.0dglj7g00ckpfz1g8fu6g07ver8w'>
            <column caption='Blank' datatype='string' name='[Calculation_980940356503928835]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Day' name='[dy:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Quarter' name='[qr:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[profit_margin]' derivation='Sum' name='[sum:profit_margin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action16_B9763DE664A649E3958604A2E486E608]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_980940356503928835]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action14_AB08BA008E564D87AE985F85A1C03C9A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date))]'>
            <groupfilter function='level-members' level='[yr:cy_date:ok]' user:ui-action-filter='[Action10_FE1A0D04DF204CFCABF419030C2D864F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_FE1A0D04DF204CFCABF419030C2D864F]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[qr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date),MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_FE1A0D04DF204CFCABF419030C2D864F]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[qr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date),MONTH(Cy Date),DAY(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_FE1A0D04DF204CFCABF419030C2D864F]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[qr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
              <groupfilter function='level-members' level='[dy:cy_date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date),MONTH(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date),MONTH(Cy Date),DAY(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Markets Name)]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:profit_margin:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:profit_margin:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#59a14f' fontsize='18'>Profit</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#59a14f' fontsize='18'><![CDATA[<[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:profit_margin:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{94F33115-67F1-412F-9458-F3B15EBAE755}' />
    </worksheet>
    <worksheet name='Profit By Markets'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0dglj7g00ckpfz1g8fu6g07ver8w' />
          </datasources>
          <datasource-dependencies datasource='federated.0dglj7g00ckpfz1g8fu6g07ver8w'>
            <column caption='Profit Margin %' datatype='real' name='[Calculation_617837636576002048]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([profit_margin])/SUM([Calculation_980940356462510080])' />
            </column>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_980940356462510080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*86 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_980940356503928835]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Day' name='[dy:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Quarter' name='[qr:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_617837636576002048]' derivation='User' name='[usr:Calculation_617837636576002048:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_A84F50B55FCF479F80954F69077E73C6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_980940356503928835]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_61CABB2881EE4C3499612F8992B57E80]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_980940356503928835]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action8_EF5304BBE62842D0A92C3D54FC2FC5EB]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Product Code (Products))]'>
            <groupfilter function='level-members' level='[product_code (products)]' user:ui-action-filter='[Action6_0399F30172B3477D9C0692C44C2EB73A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date))]'>
            <groupfilter function='level-members' level='[yr:cy_date:ok]' user:ui-action-filter='[Action10_FE1A0D04DF204CFCABF419030C2D864F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_A11E5B09D96F41038ED0F46568510258]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_FE1A0D04DF204CFCABF419030C2D864F]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[qr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date),MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_FE1A0D04DF204CFCABF419030C2D864F]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[qr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date),MONTH(Cy Date),DAY(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_FE1A0D04DF204CFCABF419030C2D864F]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[qr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
              <groupfilter function='level-members' level='[dy:cy_date:ok]' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[usr:Calculation_617837636576002048:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Markets Name)]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Product Code (Products))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),MONTH(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date),MONTH(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date),MONTH(Cy Date),DAY(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[usr:Calculation_617837636576002048:qk]' value='35' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[usr:Calculation_617837636576002048:qk]' value='p0.00%' />
            <format attr='height' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:markets_name:nk]' value='25' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[usr:Calculation_617837636576002048:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[usr:Calculation_617837636576002048:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#f17b79' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:markets_name:nk]</rows>
        <cols>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[usr:Calculation_617837636576002048:qk]</cols>
      </table>
      <simple-id uuid='{E6A88335-0485-4B68-B75F-15F446E70888}' />
    </worksheet>
    <worksheet name='Profit Trend'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0dglj7g00ckpfz1g8fu6g07ver8w' />
          </datasources>
          <datasource-dependencies datasource='federated.0dglj7g00ckpfz1g8fu6g07ver8w'>
            <column caption='Profit Margin %' datatype='real' name='[Calculation_617837636576002048]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([profit_margin])/SUM([Calculation_980940356462510080])' />
            </column>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_980940356462510080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*86 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_980940356503928835]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Day' name='[dy:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_980940356462510080]' derivation='Sum' name='[sum:Calculation_980940356462510080:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_617837636576002048]' derivation='User' name='[usr:Calculation_617837636576002048:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action16_B9763DE664A649E3958604A2E486E608]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_980940356503928835]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action14_AB08BA008E564D87AE985F85A1C03C9A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[dy:cy_date:ok]'>
            <groupfilter function='member' level='[dy:cy_date:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[yr:cy_date:ok]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[dy:cy_date:ok]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Markets Name)]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]' value='46' />
            <encoding attr='space' class='0' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[usr:Calculation_617837636576002048:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='width' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[usr:Calculation_617837636576002048:qk]' value='46' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[yr:cy_date:ok]' value='77' />
            <format attr='text-format' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[usr:Calculation_617837636576002048:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='28' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f17b79' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[usr:Calculation_617837636576002048:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[:Measure Names]' />
              <text column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[usr:Calculation_617837636576002048:qk]' />
              <text column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk] + [federated.0dglj7g00ckpfz1g8fu6g07ver8w].[usr:Calculation_617837636576002048:qk])</rows>
        <cols>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[yr:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{890E8279-501E-44A3-8BE3-18D71B8F0CB0}' />
    </worksheet>
    <worksheet name='Quantity'>
      <repository-location id='Quantity' path='/t/talkswithsimranjeet-b20383df25/workbooks/SalesInsightProjectforAtliQ' revision='' site='talkswithsimranjeet-b20383df25' />
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0dglj7g00ckpfz1g8fu6g07ver8w' />
          </datasources>
          <datasource-dependencies datasource='federated.0dglj7g00ckpfz1g8fu6g07ver8w'>
            <column caption='Blank' datatype='string' name='[Calculation_980940356503928835]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_A84F50B55FCF479F80954F69077E73C6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_980940356503928835]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_61CABB2881EE4C3499612F8992B57E80]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_980940356503928835]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action9_8187AC1206C6487E9A5DC05A60B12B00]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Product Code (Products))]'>
            <groupfilter function='level-members' level='[product_code (products)]' user:ui-action-filter='[Action6_0399F30172B3477D9C0692C44C2EB73A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_A11E5B09D96F41038ED0F46568510258]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Markets Name)]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Product Code (Products))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='219' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:sales_qty:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#59a14f' fontsize='18'>Sales Quantity</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#59a14f' fontsize='18'><![CDATA[<[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:sales_qty:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7AB62E22-E720-4639-87C5-26C80F7337E9}' />
    </worksheet>
    <worksheet name='Revenue'>
      <repository-location id='Revenue' path='/t/talkswithsimranjeet-b20383df25/workbooks/SalesInsightProjectforAtliQ' revision='' site='talkswithsimranjeet-b20383df25' />
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0dglj7g00ckpfz1g8fu6g07ver8w' />
          </datasources>
          <datasource-dependencies datasource='federated.0dglj7g00ckpfz1g8fu6g07ver8w'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_980940356462510080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*86 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_980940356503928835]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Day' name='[dy:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Quarter' name='[qr:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_980940356462510080]' derivation='Sum' name='[sum:Calculation_980940356462510080:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_A84F50B55FCF479F80954F69077E73C6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_980940356503928835]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_61CABB2881EE4C3499612F8992B57E80]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_980940356503928835]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action9_8187AC1206C6487E9A5DC05A60B12B00]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Product Code (Products))]'>
            <groupfilter function='level-members' level='[product_code (products)]' user:ui-action-filter='[Action6_0399F30172B3477D9C0692C44C2EB73A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date))]'>
            <groupfilter function='level-members' level='[yr:cy_date:ok]' user:ui-action-filter='[Action10_FE1A0D04DF204CFCABF419030C2D864F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_A11E5B09D96F41038ED0F46568510258]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_FE1A0D04DF204CFCABF419030C2D864F]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[qr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date),MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_FE1A0D04DF204CFCABF419030C2D864F]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[qr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date),MONTH(Cy Date),DAY(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_FE1A0D04DF204CFCABF419030C2D864F]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[qr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
              <groupfilter function='level-members' level='[dy:cy_date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Markets Name)]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Product Code (Products))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),MONTH(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date),MONTH(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date),MONTH(Cy Date),DAY(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]' value='c#,##0,,.00M;(#,##0,,.00M)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#59a14f' fontsize='18'>Total Revenue</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#59a14f' fontsize='18'><![CDATA[<[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{292D94D2-72C3-4785-BC38-DFA9971392A9}' />
    </worksheet>
    <worksheet name='Revenue by Markets'>
      <repository-location id='RevenuebyMarkets' path='/t/talkswithsimranjeet-b20383df25/workbooks/SalesInsightProjectforAtliQ' revision='' site='talkswithsimranjeet-b20383df25' />
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0dglj7g00ckpfz1g8fu6g07ver8w' />
          </datasources>
          <datasource-dependencies datasource='federated.0dglj7g00ckpfz1g8fu6g07ver8w'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_980940356462510080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*86 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_980940356503928835]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Day' name='[dy:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Quarter' name='[qr:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_980940356462510080]' derivation='Sum' name='[sum:Calculation_980940356462510080:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_A84F50B55FCF479F80954F69077E73C6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_980940356503928835]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_61CABB2881EE4C3499612F8992B57E80]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_980940356503928835]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action8_EF5304BBE62842D0A92C3D54FC2FC5EB]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Product Code (Products))]'>
            <groupfilter function='level-members' level='[product_code (products)]' user:ui-action-filter='[Action6_0399F30172B3477D9C0692C44C2EB73A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date))]'>
            <groupfilter function='level-members' level='[yr:cy_date:ok]' user:ui-action-filter='[Action10_FE1A0D04DF204CFCABF419030C2D864F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_A11E5B09D96F41038ED0F46568510258]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_FE1A0D04DF204CFCABF419030C2D864F]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[qr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date),MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_FE1A0D04DF204CFCABF419030C2D864F]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[qr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date),MONTH(Cy Date),DAY(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_FE1A0D04DF204CFCABF419030C2D864F]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[qr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
              <groupfilter function='level-members' level='[dy:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:markets_name:nk]'>
            <groupfilter function='level-members' level='[none:markets_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Markets Name)]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Product Code (Products))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),MONTH(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date),MONTH(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date),MONTH(Cy Date),DAY(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:markets_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]' value='35' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-align' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]' value='center' />
            <format attr='font-size' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]' value='11' />
            <format attr='font-weight' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]' value='bold' />
            <format attr='text-format' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
            <format attr='height' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:markets_name:nk]' value='32' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f17b79' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:markets_name:nk]</rows>
        <cols>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]</cols>
      </table>
      <simple-id uuid='{6B069CCD-2B84-49ED-9361-99B7CDF15357}' />
    </worksheet>
    <worksheet name='Revenue by Year'>
      <repository-location id='RevenuebyYear' path='/t/talkswithsimranjeet-b20383df25/workbooks/SalesInsightProjectforAtliQ' revision='' site='talkswithsimranjeet-b20383df25' />
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0dglj7g00ckpfz1g8fu6g07ver8w' />
          </datasources>
          <datasource-dependencies datasource='federated.0dglj7g00ckpfz1g8fu6g07ver8w'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_980940356462510080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*86 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_980940356503928835]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_980940356462510080]' derivation='Sum' name='[sum:Calculation_980940356462510080:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_A84F50B55FCF479F80954F69077E73C6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_980940356503928835]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_61CABB2881EE4C3499612F8992B57E80]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_980940356503928835]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action9_8187AC1206C6487E9A5DC05A60B12B00]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Product Code (Products))]'>
            <groupfilter function='level-members' level='[product_code (products)]' user:ui-action-filter='[Action6_0399F30172B3477D9C0692C44C2EB73A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Markets Name)]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Product Code (Products))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]' value='c#,##0,,.00M;(#,##0,,.00M)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[mn:cy_date:ok]' value='iLLL' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]' />
              <text column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]</rows>
        <cols>([federated.0dglj7g00ckpfz1g8fu6g07ver8w].[yr:cy_date:ok] / [federated.0dglj7g00ckpfz1g8fu6g07ver8w].[mn:cy_date:ok])</cols>
      </table>
      <simple-id uuid='{9CE5B2E3-9ECF-4EE9-9022-7A865A4567B1}' />
    </worksheet>
    <worksheet name='Sales Quantity by Markets'>
      <repository-location id='SalesQuantitybyMarkets' path='/t/talkswithsimranjeet-b20383df25/workbooks/SalesInsightProjectforAtliQ' revision='' site='talkswithsimranjeet-b20383df25' />
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0dglj7g00ckpfz1g8fu6g07ver8w' />
          </datasources>
          <datasource-dependencies datasource='federated.0dglj7g00ckpfz1g8fu6g07ver8w'>
            <column caption='Blank' datatype='string' name='[Calculation_980940356503928835]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_A84F50B55FCF479F80954F69077E73C6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_980940356503928835]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_61CABB2881EE4C3499612F8992B57E80]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_980940356503928835]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action9_8187AC1206C6487E9A5DC05A60B12B00]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Product Code (Products))]'>
            <groupfilter function='level-members' level='[product_code (products)]' user:ui-action-filter='[Action6_0399F30172B3477D9C0692C44C2EB73A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_A11E5B09D96F41038ED0F46568510258]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:sales_qty:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Markets Name)]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Product Code (Products))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='90' />
            <format attr='cell-h' value='30' />
            <format attr='cell' value='30' />
            <format attr='cell-q' value='150' />
            <format attr='text-format' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:sales_qty:qk]' value='n#,##0,.00K;-#,##0,.00K' />
            <format attr='color' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:sales_qty:qk]' value='#000000' />
            <format attr='font-size' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:sales_qty:qk]' value='10' />
            <format attr='font-weight' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:sales_qty:qk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:sales_qty:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:sales_qty:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:markets_name:nk]</rows>
        <cols>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:sales_qty:qk]</cols>
      </table>
      <simple-id uuid='{90DE503D-4096-4295-A20D-F0A14B1B7692}' />
    </worksheet>
    <worksheet name='Top 5 Customers'>
      <repository-location id='Top5Customers' path='/t/talkswithsimranjeet-b20383df25/workbooks/SalesInsightProjectforAtliQ' revision='' site='talkswithsimranjeet-b20383df25' />
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0dglj7g00ckpfz1g8fu6g07ver8w' />
          </datasources>
          <datasource-dependencies datasource='federated.0dglj7g00ckpfz1g8fu6g07ver8w'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_980940356462510080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*86 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_980940356503928835]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[custmer_name]' derivation='None' name='[none:custmer_name:nk]' pivot='key' type='nominal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_980940356462510080]' derivation='Sum' name='[sum:Calculation_980940356462510080:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_A84F50B55FCF479F80954F69077E73C6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_980940356503928835]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_61CABB2881EE4C3499612F8992B57E80]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_980940356503928835]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action9_8187AC1206C6487E9A5DC05A60B12B00]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Product Code (Products))]'>
            <groupfilter function='level-members' level='[product_code (products)]' user:ui-action-filter='[Action6_0399F30172B3477D9C0692C44C2EB73A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_A11E5B09D96F41038ED0F46568510258]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:custmer_name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_980940356462510080])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:custmer_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:custmer_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:custmer_name:nk]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Markets Name)]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Product Code (Products))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='90' />
            <format attr='cell-h' value='30' />
            <format attr='cell' value='30' />
            <format attr='cell-q' value='150' />
            <format attr='text-format' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
            <format attr='font-weight' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]' value='bold' />
            <format attr='font-size' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]' value='10' />
            <format attr='color' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]' value='#ffffff' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:custmer_name:nk]' value='156' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:custmer_name:nk]</rows>
        <cols>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]</cols>
      </table>
      <simple-id uuid='{716DC591-18B4-4D28-BA12-DAAD61585D5E}' />
    </worksheet>
    <worksheet name='Top 5 Products'>
      <repository-location id='Top5Products' path='/t/talkswithsimranjeet-b20383df25/workbooks/SalesInsightProjectforAtliQ' revision='' site='talkswithsimranjeet-b20383df25' />
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0dglj7g00ckpfz1g8fu6g07ver8w' />
          </datasources>
          <datasource-dependencies datasource='federated.0dglj7g00ckpfz1g8fu6g07ver8w'>
            <column caption='Normalized Amount' datatype='real' name='[Calculation_980940356462510080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*86 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_980940356503928835]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[product_code (products)]' derivation='None' name='[none:product_code (products):nk]' pivot='key' type='nominal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_980940356462510080]' derivation='Sum' name='[sum:Calculation_980940356462510080:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_A84F50B55FCF479F80954F69077E73C6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_980940356503928835]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_61CABB2881EE4C3499612F8992B57E80]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_980940356503928835]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action9_8187AC1206C6487E9A5DC05A60B12B00]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_A11E5B09D96F41038ED0F46568510258]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:product_code (products):nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_980940356462510080])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:product_code (products):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:product_code (products):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:product_code (products):nk]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Markets Name)]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='78' />
            <format attr='cell-h' value='26' />
            <format attr='cell' value='26' />
            <format attr='cell-q' value='130' />
            <format attr='font-size' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]' value='10' />
            <format attr='color' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]' value='#ffffff' />
            <format attr='font-weight' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]' value='bold' />
            <format attr='text-format' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:product_code (products):nk]' value='68' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:product_code (products):nk]</rows>
        <cols>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]</cols>
      </table>
      <simple-id uuid='{D8E2A0A4-8311-47C6-954B-9A5BC8EC3F41}' />
    </worksheet>
    <worksheet name='Year'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <repository-location id='Year' path='/t/talkswithsimranjeet-b20383df25/workbooks/SalesInsightProjectforAtliQ' revision='' site='talkswithsimranjeet-b20383df25' />
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0dglj7g00ckpfz1g8fu6g07ver8w' />
          </datasources>
          <datasource-dependencies datasource='federated.0dglj7g00ckpfz1g8fu6g07ver8w'>
            <column caption='Blank' datatype='string' name='[Calculation_980940356503928835]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Day' name='[dy:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_980940356503928835]' derivation='None' name='[none:Calculation_980940356503928835:nk]' pivot='key' type='nominal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Quarter' name='[qr:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_A84F50B55FCF479F80954F69077E73C6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_980940356503928835]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action9_8187AC1206C6487E9A5DC05A60B12B00]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Product Code (Products))]'>
            <groupfilter function='level-members' level='[product_code (products)]' user:ui-action-filter='[Action6_0399F30172B3477D9C0692C44C2EB73A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date))]'>
            <groupfilter function='level-members' level='[yr:cy_date:ok]' user:ui-action-filter='[Action10_FE1A0D04DF204CFCABF419030C2D864F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_A11E5B09D96F41038ED0F46568510258]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_FE1A0D04DF204CFCABF419030C2D864F]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[qr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date),MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_FE1A0D04DF204CFCABF419030C2D864F]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[qr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date),MONTH(Cy Date),DAY(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action10_FE1A0D04DF204CFCABF419030C2D864F]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
              <groupfilter function='level-members' level='[qr:cy_date:ok]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
              <groupfilter function='level-members' level='[dy:cy_date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Markets Name)]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (Product Code (Products))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),MONTH(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date),MONTH(Cy Date))]</column>
            <column>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[Action (YEAR(Cy Date),QUARTER(Cy Date),MONTH(Cy Date),DAY(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='5' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[yr:cy_date:ok]' value='22' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[yr:cy_date:ok]' value='#9d7660' />
            <format attr='font-size' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[yr:cy_date:ok]' value='12' />
            <format attr='font-weight' field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[yr:cy_date:ok]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:Calculation_980940356503928835:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[yr:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{68501305-8475-4BA3-8AE9-4C5625D9F3AF}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard-Profit Analysis'>
      <style />
      <size maxheight='900' maxwidth='1500' minheight='900' minwidth='1500' sizing-mode='fixed' />
      <zones>
        <zone h='5667' id='3' name='Year' w='16800' x='29200' y='4222' />
        <zone h='5556' id='4' name='Month' w='62400' x='7000' y='9667' />
        <zone h='12111' id='5' name='Profit' show-title='false' w='11467' x='25667' y='16111' />
        <zone h='64222' id='6' name='Revenue by Markets' w='19867' x='1400' y='29111' />
        <zone h='13778' id='7' name='Revenue' show-title='false' w='19400' x='3333' y='17222' />
        <zone h='68667' id='8' name='Profit By Markets' w='17733' x='21667' y='28333' />
        <zone h='29444' id='9' name='Profit Trend' w='54467' x='43133' y='16778' />
        <zone h='49222' id='10' name='Customer Table' w='34400' x='43067' y='48889' />
        <zone h='43111' id='11' name='Pie Chart' w='21067' x='77933' y='49111' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1800' minheight='1800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='15' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='14' param='vert' type-v2='layout-flow' w='98934' x='533' y='889'>
                <zone fixed-size='51' h='5667' id='3' is-fixed='true' name='Year' w='16800' x='29200' y='4222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='50' h='5556' id='4' is-fixed='true' name='Month' w='62400' x='7000' y='9667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='109' h='12111' id='5' is-fixed='true' name='Profit' show-title='false' w='11467' x='25667' y='16111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='265' h='29444' id='9' is-fixed='true' name='Profit Trend' w='54467' x='43133' y='16778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='124' h='13778' id='7' is-fixed='true' name='Revenue' show-title='false' w='19400' x='3333' y='17222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='68667' id='8' is-fixed='true' name='Profit By Markets' w='17733' x='21667' y='28333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='64222' id='6' is-fixed='true' name='Revenue by Markets' w='19867' x='1400' y='29111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49222' id='10' is-fixed='true' name='Customer Table' w='34400' x='43067' y='48889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43111' id='11' is-fixed='true' name='Pie Chart' w='21067' x='77933' y='49111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C44770D2-4AE5-4D00-81B2-F1546689D111}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard-Revenue Analysis'>
      <repository-location id='Dashboard1' path='/t/talkswithsimranjeet-b20383df25/workbooks/SalesInsightProjectforAtliQ' revision='' site='talkswithsimranjeet-b20383df25' />
      <style />
      <size maxheight='900' maxwidth='1500' minheight='900' minwidth='1500' sizing-mode='fixed' />
      <zones>
        <zone h='9778' id='5' name='Revenue' show-title='false' w='16533' x='3800' y='16222' />
        <zone h='5333' id='6' name='Month' w='57933' x='20200' y='7333' />
        <zone h='6111' id='7' name='Year' w='20667' x='36667' y='2333' />
        <zone h='76000' id='8' name='Revenue by Markets' w='23067' x='267' y='29222' />
        <zone h='72667' id='9' name='Sales Quantity by Markets' w='22667' x='24067' y='29556' />
        <zone h='10333' id='10' name='Quantity' show-title='false' w='17400' x='27467' y='16444' />
        <zone h='39222' id='11' name='Revenue by Year' w='52533' x='47000' y='13000' />
        <zone h='40000' id='12' name='Top 5 Customers' w='24400' x='51467' y='54889' />
        <zone h='31889' id='13' name='Top 5 Products' w='22533' x='77200' y='53111' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1800' minheight='1800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='24' param='vert' type-v2='layout-flow' w='98934' x='533' y='889'>
                <zone fixed-size='55' h='6111' id='7' is-fixed='true' name='Year' w='20667' x='36667' y='2333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='48' h='5333' id='6' is-fixed='true' name='Month' w='57933' x='20200' y='7333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39222' id='11' is-fixed='true' name='Revenue by Year' w='52533' x='47000' y='13000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='88' h='9778' id='5' is-fixed='true' name='Revenue' show-title='false' w='16533' x='3800' y='16222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='93' h='10333' id='10' is-fixed='true' name='Quantity' show-title='false' w='17400' x='27467' y='16444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='76000' id='8' is-fixed='true' name='Revenue by Markets' w='23067' x='267' y='29222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='72667' id='9' is-fixed='true' name='Sales Quantity by Markets' w='22667' x='24067' y='29556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='31889' id='13' is-fixed='true' name='Top 5 Products' w='22533' x='77200' y='53111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40000' id='12' is-fixed='true' name='Top 5 Customers' w='24400' x='51467' y='54889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{EB68A92A-ED81-4FA2-A193-148C8C0DCB22}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Revenue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{060B3B28-706F-4BCF-B941-65C5D8C498DB}' />
    </window>
    <window class='worksheet' name='Quantity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{90CB82E3-7EFC-4C2E-B25D-C37677223C48}' />
    </window>
    <window class='worksheet' name='Revenue by Markets'>
      <cards>
        <edge name='left'>
          <strip size='184'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AEDDE593-F72A-4602-95D4-681DFB44F497}' />
    </window>
    <window class='worksheet' name='Profit By Markets'>
      <cards>
        <edge name='left'>
          <strip size='184'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[usr:Calculation_617837636576002048:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:markets_name:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:markets_name:nk]</field>
                  <field>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[usr:Calculation_617837636576002048:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Ahmedabad&quot;</value>
                <value>0.030358486351767713</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{25DF98FB-842E-480F-B3EF-518BFC13226E}' />
    </window>
    <window class='worksheet' name='Sales Quantity by Markets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EAF4307D-AA99-4A3E-8AE1-52E42BC48DDE}' />
    </window>
    <window class='worksheet' name='Top 5 Customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:custmer_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{226CB297-13EF-45D1-99F4-E708BAC16113}' />
    </window>
    <window class='worksheet' name='Top 5 Products'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:product_code (products):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DC560DBD-AE56-434A-BCBC-330AFA0D075C}' />
    </window>
    <window class='worksheet' name='Revenue by Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:month_name:nk]</field>
            <field>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[yr:cy_date:ok]</field>
            <field>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8C1CE5D1-34BF-4517-AC40-197D324219A0}' />
    </window>
    <window class='worksheet' name='Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:Calculation_980940356503928835:nk]</field>
            <field>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A237015B-668E-41C8-A832-8D4A3BB3052D}' />
    </window>
    <window class='worksheet' name='Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:Calculation_980940356503928835:nk]</field>
            <field>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{24FA7379-98EE-4BF1-88AD-8F1DFE1A1408}' />
    </window>
    <window class='dashboard' name='Dashboard-Revenue Analysis'>
      <viewpoints>
        <viewpoint name='Month' />
        <viewpoint name='Quantity' />
        <viewpoint name='Revenue' />
        <viewpoint name='Revenue by Markets' />
        <viewpoint name='Revenue by Year'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Sales Quantity by Markets' />
        <viewpoint name='Top 5 Customers' />
        <viewpoint name='Top 5 Products' />
        <viewpoint name='Year' />
      </viewpoints>
      <active id='-1' />
      <device-preview visible='true' />
      <simple-id uuid='{C81B8331-E5CB-438A-A834-1D12238E7280}' />
    </window>
    <window class='worksheet' name='Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C1441947-BFF8-4612-8852-9654AFB083CE}' />
    </window>
    <window class='worksheet' maximized='true' name='Profit Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:year:qk]</field>
            <field>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[qr:cy_date:ok]</field>
            <field>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{190B8029-1175-42A1-B172-AD6F2B66A228}' />
    </window>
    <window class='worksheet' name='Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:customer_type:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[sum:Calculation_980940356462510080:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:customer_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{71AFA790-64E4-47A2-B3DD-EB8E816DC4A2}' />
    </window>
    <window class='dashboard' name='Dashboard-Profit Analysis'>
      <viewpoints>
        <viewpoint name='Customer Table' />
        <viewpoint name='Month' />
        <viewpoint name='Pie Chart'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Profit' />
        <viewpoint name='Profit By Markets' />
        <viewpoint name='Profit Trend'>
          <zoom type='entire-view' />
          <highlight field='[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Revenue' />
        <viewpoint name='Revenue by Markets' />
        <viewpoint name='Year' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{3D858F2C-4534-4195-B2BD-BB939E8E62E1}' />
    </window>
    <window class='worksheet' name='Customer Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dglj7g00ckpfz1g8fu6g07ver8w].[none:custmer_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C8320664-E9FE-4437-BD69-0EC30DBD25EB}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Customer Table' width='192'>
      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
      jUb0/wMzSiIU664pVwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard-Profit Analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard-Revenue Analysis' width='192'>
      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
      m/8BOOlBxR/3zBEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='30' name='Month' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Pie Chart' width='192'>
      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
      kwCE0v4PuBi9J/E7ducAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='107' name='Profit' width='124'>
      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
      4WJi9jG/5JQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='64' name='Profit By Markets' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABACAYAAABMbHjfAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAIiUlEQVR4nO3df0zU9x3H8adeYXdQCge0A1asWK2CrvxwzPlrMUo0sDWSmsBCncW2EW1M
      sKHdqi51GqymrrPE2moFtaFDq7PRaUo0klm1OBU80CpYUagORYE7TuQ4gfO7Pw70xENHe1fu
      +n0//uN778/nvp+D1/fz+X7v7ssgRVEUhFCpwQO9A0IMJAmAUDUJgFA1CYBQNQmAUDUJgFA1
      CYBQNQmAl7FYLAO9Cx6rtbW1320ec8N+CDcbNGjQQO/CT4bMAELVZAbwYualiwd6F7yezABC
      1SQAQtUkAELV3BcA8yH+lpVF1ofHsDp5uKJgBcUNbnv2/mkoZkVBRX8aULyigP60+L9VFLDC
      Y16Ynz63BcBsKMOSmsmM+nIMzhIghAdwUwDMGMosJMaPJz6xnnJJgPBQ7rkMajZQZklkdhiE
      xSfSUFyJdfw4tL3KbDe/pWTfLoor62jt8CVi6gLeTI/BH7AvM/6F3x8i+aZwP2dvtINuBKl/
      Wkhc/U4KPj9BXWsHvhFTWfBmOjH+PZ02UV60iW0n7H2GjpzGS1mp9x4HOq8c5dNP/8mpK+3Y
      NDqeiniCW+Ev3itoq6Fk287u/QKNLpKEtFeYOyECzb1eaDhZyKqe/Qh9ntT585gW6dPTCTUl
      29hZXEmdvRMiE9J4Ze4EIu52YuPmmb3kby/hfFMH+AYwNPRn8GsX/i7EQ7klAGZDGZbE2YQB
      RMWTcLWYSus4xt2XgHr2bztMSmomuXPD0d65wp5Vf2dP9VoyRvXUnOHQ4WdJW7Sa+SE+tJ0s
      YFnuMqpnZJCZm0G49g41O5ez4+upxEx/ErBypnA9x4fPIzcjHC1Wrh3bzAd5B3hjyXT7/jQc
      YM37BkZnLSMvWo+PzUpr1W7ePe6wa1fraBqVzuLZzxCi1dBpqmL3uo/Y93QuM4f0FNVQ3fQq
      83IzCNHewVSxk7XvbeLxNa93j/MqdU2jSF88m2dCtGg6TVTtXsdH+54mt7sT65lCVn52mxcW
      rSE7XIums40bR/LZcNsdvxXhjBuWQD3Ln7Dun6OIiblEeWXvZdAvSMl6jeTYcLQawCeScYl6
      2u8ri2Pma9OIDtGiQcMTkZHow6aQNjOWcHsjho+Iostms5dbDXzV8XuyJnX3qdESPimLtNB/
      U1oLYOPcwa/4eWY2M6P1+GCvCQgNROf4tCOSSJ80jBCt/VDto49mcqIv1xttDkXRTEmO7q7x
      QR+XzpzfXuHIf8w9nZCUPolhIVr7rOGjJ3pyIr7XG7H3YuTrLy8z5Y0sJoX31PjzVPDj3/eF
      F9+Dy2cA86FNbLtQD8uy2O34wNHNHI99vdcs4GIXznNOE+ewTAHQMHbeKsYC0Mh3l4YxdvbD
      dsJGddESvhicwdzUMd1Bs2u40QiE9dFOQ9SwKJq/MwKB2KqLWPLFYDLmpjKm5w/c3gn2Xi5T
      dzuR3/XVnfhRuDgAZgxlzcx4eyMvRjlut3Husz9zqNLKOHcmYMhQhm3+hnO2OGI0zgp06Pxq
      uFQLcVHOHgdopLbmOVLeiSW8X09u5UzFt0SOmWPvpbaG51LeIbbPTrToTBeptUKYOw8K4qFc
      uwQyGyhrTiT+gT8uDSMT4rhUXun0PQGXCUxk4rOlbN54lGtW+0Kjs+2/VO75nCMNAIH8Jmk4
      pVuKqDB12h83VVG84xD3rrzr0PlVUX7SRCdgszZTVZJP/v7e1+Y7aWu12pcznSaq9uSx9fo0
      Un9l/2vW6fyoKj+Jyd4JzVUl5Ofvd3ieUUydbmTXhhLqrDbAhvXaSQr3uOXdBdEHl84AxrLj
      NCem4ezgqhmZQNzmQ05Ohl3Jn/FZf+Wx7QW8/1YhrR3gGzCU2ORZpD1pr9DGzSG7+RM+WZ7N
      x+2gixzPSy9MIKysp49AJmfO4mLecrLz29H0tE+6ynaHZ9INuc3x997mHze6rySNnsHC7OS7
      V3gCJ2cy62Iey7PzadcEMDQ2mVlpSVx16CRs+iJevrmeD9/aYb9i9XwKL0/5JbXykf8fzSC5
      MZZ3sVgs+Pvbr+nKp0F/OPkskFA1CYBQNQmAUDU5B/AyjucA4oeTGUComnwn2AvJpO1ca2sr
      AQEB/WojSyAvI/cFci2ZAbyQn5/fQO+CR7JYLP1+beQcQKiaBEComgRAqJoEQKiaXAUSqiYz
      gFA1CYBQNQmAUDUJgFA1CYBQNQmAUDX5LJBXa6OmeCtbvjxNU/eX6udmJjP8EV8XsDWVU7Sh
      kGNX2kEXyfg/zidjbOh991NyVY1nj8EGivBa1/avVBau3KvUtncpSle7Urt3pbJw5X7l2sMa
      tZ9WtuTkKPknjEqHoigdxhNKfk6OsuV0u+trPHwMLYfXKhIAb9V1VinMWaeU3nLceEspXZej
      FJ7t6rNZ88HVytJdlxTHiq5Lu5Slqw8qzS6u8fQxtNTXK3IO4K0uV3N26Fji71sq+BM/dihn
      qy/30cjK+aoWEuKj7lsqaKLiSWip4rzVlTWePgYIjIiQk2CvZTZhDdY/cMt5rT4Yq8nstAm0
      0GIMITi49/ZggkOMtLS4ssbTx2AnAfBien3QgxuD9Ogf3oqgwN7bAgnSu6Pm0QZ2DBIAr2Yy
      OTnUtpgwPbwVLQ8cXM20mNxR82gDOwYJgPcK1KM1mh642bDVZESrf+DQ1y2IoOBmjMbe240Y
      m4MJCnJljaePAcAmAfBaQ0Yxuq4cQ5vjxjYM5XWMHjWkj0ZaRkYHccpQi+O/+rDVGjgVFM1I
      rStrPH0MYKvdIwHwWpoYkqbfpChvn/326jYrdfvyKLo5nSTn/xwBgOCJKQwvXc/W7tu/d5pO
      snV9KcNTJhLs4hpPH8OFY6XyhRjv9uh3USsKsviYBWx8Ne7uNm97J9g9Y2jkwLt/kQAIdZMl
      kFA1CYBQNQmAUDUJgFA1CYBQNQmAUDUJgFC1/wEAhrHuTt7a4gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Profit Trend' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='86' name='Revenue' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Revenue by Markets' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Revenue by Year' width='192'>
      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
      TkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
